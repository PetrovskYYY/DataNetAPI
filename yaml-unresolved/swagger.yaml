openapi: 3.0.1
info:
  title: DataNet API
  description: API for access to DataNet server
  version: '0.1'
servers:
  - url: 'http://localhost:7077'
tags:
  - name: User
  - name: Server
paths:
  /user/login:
    post:
      tags: 
      - User
      description: Login request
      requestBody:
        description: Login data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                login:
                  type: string
            examples:
              '0':
                value: |-
                  {
                      "login":"admin",
                      "password":"1234"
                  }
      responses:
        '200':
          description: Authentification success
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
              examples: {}
        '401':
          description: Authentification failure
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
              examples: {}
        '403':
          description: Authentification is successful, but user is not allowed to log in. 
        '500':
          description: Application error occurred during authentification process.
      servers:
        - url: 'http://localhost:7077'
    servers:
      - url: 'http://localhost:7077'

  /user/{id}:
    get:
      tags: 
      - User
      description: Returns information about user based on active user access level.
      security:
      - Bearer: []
      parameters: 
        - in: path
          name: id
          required: true
          description: User unique id
          
      responses:
        '200':
          description: Request successfull
          schema:
            $ref: '#/definitions/UserData'
        '403':
          description: Access denied 
        '500':
          description: Server side error
  
  /shutdown:
    get:
      tags: 
      - Server
      description: Request to shutdown server
      responses:
        '200':
          description: Server shutdown process started
      servers:
        - url: 'http://localhost:7077'

schemes:
 - https
 - http
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://localhost:7077'
          scopes:
            scope_name: Enter your scopes here
            
definitions:
  UserData:
    type: object
    required:
      - name
      - role
    properties:
      id:
        type: string